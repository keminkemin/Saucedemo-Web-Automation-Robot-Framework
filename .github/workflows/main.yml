name: Robot Framework Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  robot-test:
    runs-on: ubuntu-latest  

    strategy:
      matrix:
        python-version: [3.9]  

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python with the specified version
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install Google Chrome from the custom URL
      - name: Install Google Chrome from custom URL
        run: |
          wget https://storage.googleapis.com/chrome-for-testing-public/128.0.6613.119/linux64/chrome-linux64.zip
          unzip chrome-linux64.zip
          sudo mv chrome-linux64 /usr/local/bin/google-chrome
          if [ -L /usr/bin/google-chrome ]; then sudo rm /usr/bin/google-chrome; fi
          sudo ln -s /usr/local/bin/google-chrome/chrome /usr/bin/google-chrome
          rm chrome-linux64.zip

      # Step 4: Install ChromeDriver for the specific Chrome version
      - name: Install ChromeDriver
        run: |
          wget 	https://storage.googleapis.com/chrome-for-testing-public/128.0.6613.119/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          ls -l
          sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          sudo chown root:root /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver
          rm chromedriver-linux64.zip

      # Step 5: Set up Python virtual environment and install dependencies
      - name: Set up Python virtual environment
        run: |
          python3 --version  # For debugging
          pip3 install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip3 install -r requirements.txt

      # Step 6: Run Robot Framework tests
      - name: Run Robot Framework tests
        run: |
          source venv/bin/activate  # Activate virtual environment again
          mkdir -p results  # Create results directory
          robot --outputdir results -v BROWSER:headlesschrome -v DISABLE_SCREENCAP:True Tests/login.robot

      # Step 7: Upload test results (optional)
      - name: Upload Robot Framework results
        uses: actions/upload-artifact@v2
        with:
          name: robot-results
          path: results/
